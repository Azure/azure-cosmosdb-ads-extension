{
  "name": "azure-cosmosdb-ads-extension",
  "displayName": "Cosmos DB ADS Extension",
  "description": "Cosmos DB Azure Data Studio extension",
  "publisher": "Microsoft",
  "version": "0.3.5",
  "icon": "resources/catalog/CosmosDBExtension.png",
  "aiKey": "29a207bb14f84905966a8f22524cb730-25407f35-11b6-4d4e-8114-ab9e843cb52f-7380",
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/Azure/azure-cosmosdb-ads-extension"
  },
  "engines": {
    "vscode": "*",
    "azdata": "^1.39.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/main.js",
  "contributes": {
    "commands": [
      {
        "command": "cosmosdb-ads-extension.createMongoDatabase",
        "title": "Create Database...",
        "category": "Cosmos DB Mongo"
      },
      {
        "command": "cosmosdb-ads-extension.createMongoCollection",
        "title": "Create Collection...",
        "category": "Cosmos DB Mongo"
      },
      {
        "command": "cosmosdb-ads-extension.deleteMongoCollection",
        "title": "Delete Collection",
        "category": "Cosmos DB Mongo"
      },
      {
        "command": "cosmosdb-ads-extension.deleteMongoDatabase",
        "title": "Delete Database",
        "category": "Cosmos DB Mongo"
      },
      {
        "command": "cosmosdb-ads-extension.openMongoDatabaseDashboard",
        "title": "Open Database",
        "category": "Cosmos DB Mongo"
      },
      {
        "command": "cosmosdb-ads-extension.openMongoQuery",
        "title": "Open Query",
        "category": "Cosmos DB Mongo"
      },
      {
        "command": "cosmosdb-ads-extension.openMongoShell",
        "title": "Open Mongo Shell",
        "category": "Cosmos DB Mongo"
      },
      {
        "command": "cosmosdb-ads-extension.importDocuments",
        "title": "Import Documents",
        "category": "Cosmos DB Mongo"
      },
      {
        "command": "cosmosdb-ads-extension.exportContainer",
        "title": "Export Documents",
        "category": "Cosmos DB Mongo"
      }
    ],
    "menus": {
      "objectExplorer/item/context": [
        {
          "command": "cosmosdb-ads-extension.createMongoDatabase",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == Server",
          "group": "cosmosdb"
        },
        {
          "command": "cosmosdb-ads-extension.openMongoShell",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == Server",
          "group": "cosmosdb"
        },
        {
          "command": "cosmosdb-ads-extension.openMongoDatabaseDashboard",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == CosmosDbDatabase",
          "group": "cosmosdb"
        },
        {
          "command": "cosmosdb-ads-extension.createMongoCollection",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == CosmosDbDatabase",
          "group": "cosmosdb"
        },
        {
          "command": "cosmosdb-ads-extension.deleteMongoDatabase",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == CosmosDbDatabase",
          "group": "cosmosdb"
        },
        {
          "command": "cosmosdb-ads-extension.deleteMongoCollection",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == Queue",
          "group": "cosmosdb"
        },
        {
          "command": "cosmosdb-ads-extension.openMongoShell",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == Queue",
          "group": "cosmosdb",
          "isDefault": true
        },
        {
          "command": "cosmosdb-ads-extension.importDocuments",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == Queue",
          "group": "cosmosdb"
        },
        {
          "command": "cosmosdb-ads-extension.exportContainer",
          "when": "connectionProvider == COSMOSDB_MONGO && nodeType == Queue",
          "group": "cosmosdb"
        }
      ]
    },
    "dashboard.tabs": [
      {
        "id": "mongo-account-home",
        "when": "connectionProvider == 'COSMOSDB_MONGO'",
        "isHomeTab": true,
        "description": "",
        "title": "Home",
        "provider": "COSMOSDB_MONGO",
        "container": {
          "modelview-container": null
        }
      },
      {
        "id": "mongo-databases.tab",
        "when": "connectionProvider == 'COSMOSDB_MONGO'",
        "title": "Databases",
        "icon": "resources/fluent/database.svg",
        "description": "Shows all account databases",
        "provider": "COSMOSDB_MONGO",
        "container": {
          "modelview-container": null
        }
      },
      {
        "id": "nosql-account-home",
        "when": "connectionProvider == 'COSMOSDB_NOSQL'",
        "isHomeTab": true,
        "description": "",
        "title": "Home",
        "provider": "COSMOSDB_NOSQL",
        "container": {
          "modelview-container": null
        }
      },
      {
        "id": "nosql-databases.tab",
        "when": "connectionProvider == 'COSMOSDB_NOSQL'",
        "title": "Databases",
        "icon": "resources/fluent/database.svg",
        "description": "Shows all account databases",
        "provider": "COSMOSDB_NOSQL",
        "container": {
          "modelview-container": null
        }
      }
    ],
    "connectionProvider": [
      {
        "providerId": "COSMOSDB_MONGO",
        "languageMode": "cosmosdb",
        "displayName": "Mongo account",
        "isQueryProvider": false,
        "connectionStringOptions": {
          "isEnabled": true,
          "isDefault": true
        },
        "iconPath": [
          {
            "id": "cosmosdb",
            "path": {
              "light": "resources/light/cosmosdb.svg",
              "dark": "resources/dark/cosmosdb-inverse.svg"
            },
            "default": true
          }
        ],
        "connectionOptions": [
          {
            "specialValueType": "connectionName",
            "isIdentity": true,
            "name": "connectionName",
            "displayName": "",
            "description": "",
            "groupName": "Source",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": "serverName",
            "isIdentity": true,
            "name": "server",
            "displayName": "Hostname:port or Cosmos DB host:port",
            "description": "Hostname(s) or Mongo Account",
            "groupName": "Source",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": true,
            "isArray": false
          },
          {
            "specialValueType": "authType",
            "isIdentity": true,
            "name": "authenticationType",
            "displayName": "Authentication type",
            "description": "",
            "groupName": "Security",
            "valueType": "category",
            "defaultValue": "SqlLogin",
            "objectType": null,
            "categoryValues": [
              {
                "displayName": "Azure Active Directory - Universal with MFA support",
                "name": "AzureMFA"
              },
              {
                "displayName": "Basic",
                "name": "SqlLogin"
              },
              {
                "displayName": "No Auth",
                "name": "Integrated"
              }
            ],
            "isRequired": true,
            "isArray": false
          },
          {
            "specialValueType": "userName",
            "isIdentity": true,
            "name": "user",
            "displayName": "Username",
            "description": "",
            "groupName": "Security",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": true,
            "isArray": false
          },
          {
            "specialValueType": "password",
            "isIdentity": true,
            "name": "password",
            "displayName": "Password",
            "description": "",
            "groupName": "Security",
            "valueType": "password",
            "defaultValue": null,
            "objectType": null,
            "categoryValues": null,
            "isRequired": true,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "pathname",
            "displayName": "Database",
            "description": "Database name to connect to (optional)",
            "groupName": "Connection",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "search",
            "displayName": "Options",
            "description": "Connection string parameters. E.g. key1=value1&key2=value2",
            "groupName": "Connection",
            "valueType": "string",
            "defaultValue": null,
            "objectType": null,
            "isRequired": false,
            "isArray": false
          },
          {
            "specialValueType": null,
            "isIdentity": false,
            "name": "isServer",
            "displayName": "Cluster Server",
            "description": "true for Mongo Cluster; false otherwise",
            "groupName": "Connection",
            "valueType": "boolean",
            "defaultValue": "false",
            "objectType": null,
            "isRequired": false,
            "isArray": false,
            "showOnConnectionDialog": true
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run clean && yarn run pretest && yarn run build:queryeditor && yarn run esbuild:base --keep-names --minify",
    "compile": "tsc -p ./",
    "build:queryeditor": "cd query-editor && npm i && npm run build",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint && yarn run format:check",
    "test": "node ./out/test/runTest.js",
    "format": "prettier --write \"{src,test}/**/*.{ts,tsx,html}\" \"*.{js,html}\"",
    "format:check": "prettier --check \"{src,test}/**/*.{ts,tsx,html}\" \"*.{js,html}\"",
    "proposedapi": "node installTypings.js",
    "publish": "vsce package",
    "clean": "rimraf --glob ./out ./azure-cosmosdb-ads-extension-*.vsix ./query-editor/{out,build} ./dist",
    "esbuild:base": "npx mkdirp ./dist && esbuild ./src/extension.ts --bundle --outfile=dist/main.js --external:vscode --external:azdata --format=cjs --platform=node",
    "esbuild": "yarn run esbuild:base --sourcemap",
    "esbuild:watch": "yarn run esbuild:base --sourcemap --watch"
  },
  "dependencies": {
    "@azure/arm-cosmosdb": "15.4.0-beta.2",
    "@azure/arm-monitor": "7.0.0",
    "@azure/arm-resourcegraph": "4.2.1",
    "@azure/cosmos": "3.17.3",
    "@microsoft/ads-extension-telemetry": "^3.0.1",
    "@microsoft/ads-service-downloader": "1.1.0",
    "mongodb": "4.5.0",
    "mongodb-connection-string-url": "2.5.2",
    "semver": "^7.5.2",
    "tar": "6.1.11",
    "vscode-nls": "5.0.0",
    "yauzl": "2.10.0"
  },
  "devDependencies": {
    "@types/azdata": "1.38.0",
    "@types/glob": "7.2.0",
    "@types/mkdirp": "2.0.0",
    "@types/mocha": "7.0.2",
    "@types/node": "13.13.52",
    "@types/semver": "^7.3.13",
    "@types/sinon": "7.5.0",
    "@types/tar": "6.1.2",
    "@types/tmp": "0.0.34",
    "@types/uuid": "8.3.1",
    "@types/yauzl": "2.9.2",
    "@typescript-eslint/eslint-plugin": "2.34.0",
    "@typescript-eslint/parser": "2.34.0",
    "azdata-test": "1.2.0",
    "esbuild": "0.17.12",
    "eslint": "6.8.0",
    "glob": "7.2.0",
    "mkdirp": "2.1.5",
    "mocha": "7.2.0",
    "prettier": "2.7.1",
    "sinon": "15.0.4",
    "rimraf": "4.4.0",
    "typescript": "4.6.3",
    "vsce": "2.15.0"
  },
  "prettier": {
    "printWidth": 120,
    "endOfLine": "lf"
  }
}
