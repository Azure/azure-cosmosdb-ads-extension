# Component Detection
name: "Component Detection"

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  component-detection:
    runs-on: ubuntu-latest
    name: "Component Detection"
    env:
      AZURE_DEVOPS_PAT: ${{ secrets.ADO_READER_PAT }}
    steps:
      - uses: nuget/setup-nuget@v1
      - run: nuget sources add -Name "ComponentGovernance" -Source "https://pkgs.dev.azure.com/1esSharedAssets/_packaging/ComponentGovernance/nuget/v3/index.json" -UserName "GitHub" -Password "$AZURE_DEVOPS_PAT"
      - name: Install Component Detection
        run: nuget install Microsoft.VisualStudio.Services.Governance.ComponentDetection
      - name: Execute scan
        run: ./Microsoft.VisualStudio.Services.Governance.ComponentDetection.2022.1.25.1131/linux/MS.VS.Services.Governance.ComponentDetection.Loader \
          detect \
          --Output .\cg_output \
          --Verbosity Verbose \
          --SourceDirectory . \
          --SourceFileRoot ./src \
          --ScanType Register \
          --BuildType github://Azure/azure-cosmosdb-ads-extension \
          --BuildDisplayType azure-cosmosdb-ads-extension \
          --BuildDisplayIdentifier azure-cosmosdb-ads-extension \
          --SourceType github:////Azure/azure-cosmosdb-ads-extension/refs/origin/main \
          --SourceDisplayIdentifier 9fe98f89c779c5a789d53efbd24840650355bcde \
          --Pat *** \
          --Url https://msdata.governance.visualstudio.com \
          --GovernanceProjectId azure-cosmosdb-ads-extension \
          --Timeout 120 \
          --Verbosity Verbose

  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
